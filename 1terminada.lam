let

 -- Definição de termos
 true     =  \x y. x ;
 false    =  \x y. y ;
 if       =  \a b c. a b c ;

 -- Numeros como 5 são convertidos
 -- pelo simulador para os numerais de
 -- Church correspondentes

 -- Operacoes Booleanas
 not      =  \a. a false true ;
 and      =  \a b. a b false ;
 or       =  \a b. a true b ;
 xor      =  \a b. a (not b) b ;
 nand     =  \a b. not (and a b) ;
 implies  =  \a b. or (not a) b ;
 -- Implication elimination (a -> b) = (¬a \/ b)
 iff      =  \a b. and (implies a b) (implies b a) ;
 -- Bidirectional elimination (a <-> b) = (a -> b) /\ (b -> a)

 -- Operacoes Aritmeticas
 succ     =  \n p q. p (n p q) ;
 add      =  \m n p q. m p (n p q) ;
 mult     =  \m n p q. m (n p) q ;

 -- Teste de Zero
 isZero   =  \n. n (\x. false) true ;

 -- Pares Ordenados
 pair     =  \m n b. b m n ;
 fst      =  \p. p true ;
 snd      =  \p. p false ;
 ShiftInc =  \p. pair (snd p) (succ (snd p)) ;
 pred     =  \n. fst (n ShiftInc (pair 0 0)) ;

 -- Listas
 empty    =  \x. true ;
 cons     =  \h t. pair h t ;
 isEmpty  =  \l. l (\x y. false) ;
 head     =  fst ;
 tail     =  snd ;

 -- Combinador de Ponto Fixo
 fix      =  \f. (\x. f (x x)) (\x. f (x x)) ;

 -- Funcoes Recursivas
 factrec   =   \M n. if (isZero (pred n)) 1 (mult n (M (pred n))) ;
 factorial =   fix factrec ;

 -- Trabalho
 f1       =  \x y. add (mult 2 x) y ;
 -- f2 recria o par colocando o antigo 2° elemento em 1° e vice-versa
 f2       =  \p. pair (snd p) (fst p) ;
 -- Sempre soma o 1° elemento da lista com o restante e, quando detecta empty, finaliza a soma com o valor zero
 f3rec    =  \M l. if (isEmpty l) 0 (add (fst l) (M (snd l))) ;
 f3       =  fix f3rec ;
 -- É necessário realizar um append do resto da lista original com o seu primeiro elemento, seguido do empty
 appendrec =  \M l k. if (isEmpty l) k (cons (head l) (M (tail l) k)) ;
 append   =  fix appendrec ;
 f4rec    =  \M l. if (isEmpty l) empty (append (M (tail l)) (cons (head l) empty)) ;
 f4       =  fix f4rec ;
 -- Constroi lista com o par de primeiros elementos juntamente com o restante da lista. Se for detectado o empty em alguma das duas listas, termina lista final com um empty também.
 f5rec    =  \M l k. if (isEmpty l) empty (if (isEmpty k) empty (cons (pair (head l) (head k)) (M (tail l) (tail k)))) ;
 f5       =  fix f5rec ;

in

  f5 (cons 2 (cons 5 (cons 1 empty))) (cons 3 (cons 4 (cons 2 empty)))
